sudo: required

language: cpp

compiler:
  - clang
  - gcc

before_install:
  # Step one lint the code to be sure the style is correct. No point building everything
  # if we'll fail the build for style at the end
  - sudo pip install cpplint
  - .travis/run_lint.sh
  # Ok now everything's good, so we can continue
  - sudo cp /etc/apt/sources.list /etc/apt/sources.list.d/trusty.list
  - sudo sed -i 's/precise/trusty/g' /etc/apt/sources.list.d/trusty.list
  - sudo apt-get update -qq -y
  # P4 dependencies
  - sudo apt-get install -q -y libjudy-dev
                               libgmp-dev
                               libpcap-dev
                               libboost-dev
                               libboost-test-dev
                               libboost-program-options-dev
                               libboost-system-dev
                               libboost-filesystem-dev
                               libboost-thread-dev
                               libevent-dev
  # Install a modern version of gcc and libstdc++
  - if [ "$CXX" = "clang++" ]; then sudo apt-get install -y -qq libprotobuf-dev libstdc++-4.8-dev; fi
  - if [ "$CXX" = "g++" ];     then sudo apt-get install -y -qq libprotobuf-dev g++-4.8; fi
  - if [ "$CXX" = "g++" ];     then export CXX="g++-4.8" CC="gcc-4.8"; fi
  # Install SystemC
  - wget http://www.accellera.org/images/downloads/standards/systemc/systemc-2.3.1.tgz
  - tar -xzf systemc-2.3.1.tgz
  - cd systemc-2.3.1
  - ./configure --prefix=/usr --with-unix-layout
  - make
  - sudo make install
  - cd ..
  # Install nanomsg
  - wget http://download.nanomsg.org/nanomsg-0.5-beta.tar.gz
  - tar -xzf nanomsg-0.5-beta.tar.gz
  - cd nanomsg-0.5-beta
  - ./configure
  - make
  - sudo make install
  - cd ..
  # Install PFPSim core and PFP-P4
  - .travis/get-PFPSim.py "v1.0.0" "$CXX"
  - sudo dpkg -i pfpsim*.deb
  # Install pfpgen
  - .travis/get-pfpgen.py "v1.0.0"
  - sudo pip install pfpgen*.whl
install:
  - pfpgen rmt.fad
  - cd rmt/build
  - cmake ../src
  - make -j2

script:
  - cp -r ../build_static/* ./
  - ./runme.sh
